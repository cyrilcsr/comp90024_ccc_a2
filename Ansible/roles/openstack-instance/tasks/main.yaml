---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ item.instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes
    wait: yes
    timeout: 600
    state: present
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Wait for connection
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Add host - All instance
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: instances
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Add host - Database instance
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: database
  loop: '{{ os_instance.results }}'
  when: item.openstack.name is match("database.*") or item.openstack.name is match("backend")

- name: Add host - Webserver instance
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: webserver
  loop: '{{ os_instance.results }}'
  when: item.openstack.name is match("webserver")

- name: Add host - Backend instance
  add_host:
    name: '{{ item.openstack.public_v4 }}'
    groups: backend
  loop: '{{ os_instance.results }}'
  when: item.openstack.name is match("backend")

- name: create file
  template:
    src: hosts-list.j2
    dest: "{{ instance_ip_file }}"